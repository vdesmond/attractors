[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "attractors"
version = "2.0.0-beta.1"
authors = [
  { name = "vdesmond", email = "vignesh.desmond@gmail.com" },
]
description = "A package for simulation and visualization of strange attractors"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dependencies = [
    "matplotlib>=3.10.0",
    "numba>=0.60.0",
    "numpy>=2.0.2",
    "setuptools>=75.7.0",
]

[dependency-groups]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
  "pre-commit",
  "mypy>=1.14.1",
]
lint = [
  "ruff",
]
docs = ["mkdocs-material", "mkdocstrings"]

[project.urls]
Homepage = "https://github.com/vdesmond/attractors"
"Bug Tracker" = "https://github.com/vdesmond/attractors/issues"
Discussions = "https://github.com/vdesmond/attractors/discussions"
Changelog = "https://github.com/vdesmond/attractors/releases"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]

[tool.coverage]
run.source = ["attractors"]
port.exclude_lines = [
  'pragma: no cover',
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.11"
show_error_codes = true
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
disable_error_code = ["misc"]

[[tool.mypy.overrides]]
module = "numba.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "attractors.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
src = ["src"]
exclude = []
line-length = 100
extend-exclude = ["docs"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "S",           # flake8-bandit
]
ignore = [
  "PLR",    # Design related pylint codes
  "ISC001", # Conflicts with formatter
  "EM101",
  "S101",
]
unfixable = [
  "F401",   # Would remove unused imports
  "F841",   # Would remove unused variables
]
flake8-unused-arguments.ignore-variadic-names = true  # allow unused *args/**kwargsisort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true

[tool.setuptools.package-data]
attractors = ["py.typed"]
